--
-- PostgreSQL database dump
--

-- Dumped from database version 17.5
-- Dumped by pg_dump version 17.5

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: contact; Type: TABLE; Schema: wi; Owner: postgres
--

CREATE TABLE wi.contact (
    id integer NOT NULL,
    name character varying(1024),
    organization character varying(1024),
    street character varying(1024),
    city character varying(1024),
    state character varying(1024),
    zip character varying(1024),
    country character varying(1024),
    phone character varying(1024),
    phone_ext character varying(1024),
    fax character varying(1024),
    fax_ext character varying(1024),
    email character varying(1024),
    CONSTRAINT whois_contact_valid_email CHECK (public.emailisvalid((email)::text))
);


ALTER TABLE wi.contact OWNER TO postgres;

--
-- Name: nfo; Type: TABLE; Schema: wi; Owner: postgres
--

CREATE TABLE wi.nfo (
    id integer NOT NULL,
    domain character varying(255),
    created timestamp with time zone NOT NULL,
    updated timestamp with time zone,
    registrant integer,
    admin integer,
    tech integer,
    expires timestamp with time zone,
    billing integer
);


ALTER TABLE wi.nfo OWNER TO postgres;

--
-- Name: vcnfo; Type: TABLE; Schema: wi; Owner: postgres
--

CREATE TABLE wi.vcnfo (
    id integer NOT NULL,
    nfoid integer
);


ALTER TABLE wi.vcnfo OWNER TO postgres;

--
-- Name: vcnfo_id_seq; Type: SEQUENCE; Schema: wi; Owner: postgres
--

ALTER TABLE wi.vcnfo ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME wi.vcnfo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: whois_contact_id_seq; Type: SEQUENCE; Schema: wi; Owner: postgres
--

ALTER TABLE wi.contact ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME wi.whois_contact_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: whois_nfo_id_seq; Type: SEQUENCE; Schema: wi; Owner: postgres
--

ALTER TABLE wi.nfo ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME wi.whois_nfo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: contact contact_street_zip_phone_email_key; Type: CONSTRAINT; Schema: wi; Owner: postgres
--

ALTER TABLE ONLY wi.contact
    ADD CONSTRAINT contact_street_zip_phone_email_key UNIQUE NULLS NOT DISTINCT (street, zip, phone, email);


--
-- Name: vcnfo ncnfo_uid; Type: CONSTRAINT; Schema: wi; Owner: postgres
--

ALTER TABLE ONLY wi.vcnfo
    ADD CONSTRAINT ncnfo_uid UNIQUE (nfoid);


--
-- Name: vcnfo vcnfo_pkey; Type: CONSTRAINT; Schema: wi; Owner: postgres
--

ALTER TABLE ONLY wi.vcnfo
    ADD CONSTRAINT vcnfo_pkey PRIMARY KEY (id);


--
-- Name: contact whois_contact_pkey1; Type: CONSTRAINT; Schema: wi; Owner: postgres
--

ALTER TABLE ONLY wi.contact
    ADD CONSTRAINT whois_contact_pkey1 PRIMARY KEY (id);


--
-- Name: nfo whois_nfo_domain_key; Type: CONSTRAINT; Schema: wi; Owner: postgres
--

ALTER TABLE ONLY wi.nfo
    ADD CONSTRAINT whois_nfo_domain_key UNIQUE (domain);


--
-- Name: nfo whois_nfo_pkey; Type: CONSTRAINT; Schema: wi; Owner: postgres
--

ALTER TABLE ONLY wi.nfo
    ADD CONSTRAINT whois_nfo_pkey PRIMARY KEY (id);


--
-- Name: nfo_idx_a; Type: INDEX; Schema: wi; Owner: postgres
--

CREATE INDEX nfo_idx_a ON wi.nfo USING btree (admin) WITH (deduplicate_items=off);


--
-- Name: nfo_idx_b; Type: INDEX; Schema: wi; Owner: postgres
--

CREATE INDEX nfo_idx_b ON wi.nfo USING btree (billing) WITH (deduplicate_items=off);


--
-- Name: nfo_idx_r; Type: INDEX; Schema: wi; Owner: postgres
--

CREATE INDEX nfo_idx_r ON wi.nfo USING btree (registrant) WITH (deduplicate_items=off);


--
-- Name: nfo_idx_t; Type: INDEX; Schema: wi; Owner: postgres
--

CREATE INDEX nfo_idx_t ON wi.nfo USING btree (tech) WITH (deduplicate_items=off);


--
-- Name: nfo nfo_admin_fk; Type: FK CONSTRAINT; Schema: wi; Owner: postgres
--

ALTER TABLE ONLY wi.nfo
    ADD CONSTRAINT nfo_admin_fk FOREIGN KEY (admin) REFERENCES wi.contact(id);


--
-- Name: nfo nfo_billing_fkey; Type: FK CONSTRAINT; Schema: wi; Owner: postgres
--

ALTER TABLE ONLY wi.nfo
    ADD CONSTRAINT nfo_billing_fkey FOREIGN KEY (billing) REFERENCES wi.contact(id);


--
-- Name: nfo nfo_registrant_fk; Type: FK CONSTRAINT; Schema: wi; Owner: postgres
--

ALTER TABLE ONLY wi.nfo
    ADD CONSTRAINT nfo_registrant_fk FOREIGN KEY (registrant) REFERENCES wi.contact(id);


--
-- Name: nfo nfo_tech_fk; Type: FK CONSTRAINT; Schema: wi; Owner: postgres
--

ALTER TABLE ONLY wi.nfo
    ADD CONSTRAINT nfo_tech_fk FOREIGN KEY (tech) REFERENCES wi.contact(id);


--
-- Name: vcnfo vcnfo_nfoid_fkey; Type: FK CONSTRAINT; Schema: wi; Owner: postgres
--

ALTER TABLE ONLY wi.vcnfo
    ADD CONSTRAINT vcnfo_nfoid_fkey FOREIGN KEY (nfoid) REFERENCES wi.nfo(id);


--
-- PostgreSQL database dump complete
--

