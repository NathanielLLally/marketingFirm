# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
PATH="$HOME/src/git/marketingFirm/bin:$PATH"
export PATH

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions
if [ -d ~/.bashrc.d ]; then
	for rc in ~/.bashrc.d/*; do
		if [ -f "$rc" ]; then
			. "$rc"
		fi
	done
fi

unset rc

PATH="/home/nathaniel/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="/home/nathaniel/src/git/marketingFirm/lib:/home/nathaniel/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/home/nathaniel/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/home/nathaniel/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/home/nathaniel/perl5"; export PERL_MM_OPT;

alias psql='psql -h `hostname -f` -U postgres'

case "$TERM" in 
	screen*) PROMPT_COMMAND='printf "\033k%s@%s:%s\033\\" "${USER}" "$(hostname -f)" "${PWD/#$HOME/\~}"' ;;
	xterm*|vte*) PROMPT_COMMAND='printf "\033]0;%s@%s:%s\007" "${USER}" "$(hostname -f)" "${PWD/#$HOME/\~}"' ;;
esac

#export PROMPT_COMMAND='printf "\033k%s@%s:%s\033\\" "${USER}" "$(hostname -f)" "${PWD/#$HOME/\~}"'
PS1='\[\e[1;32m\]\u\[\e[m\]@\[\e[35m\]\H\[\e[m\] \w\[\e[34m\] $\[\e[m\] ';
export PS1;


if [ -e "$SSH_AUTH_SOCK" ]; then
  echo export SSH_AUTH_SOCK="$SSH_AUTH_SOCK" > ~/.ssh_auth
else
  . ~/.ssh_auth
fi

knock_ssh() {
  host=$1
  if [ -z "$1" ]; then
    host="mail.winblows98.com"
  fi
  for i in 123 234 345 456; do
    ssh -q -p $i $host
  done
  ssh -A $host
}
knock() {
  host=$1
  if [ -z "$1" ]; then
    host="mail.winblows98.com"
  fi
  nmap -Pn -sT -p 123,234,345,456 -r --max-retries 0 --max-parallelism 1 --min-rtt-timeout 1 $host 2>&1 > /dev/null
}

echo export SSH_AUTH_SOCK="$SSH_AUTH_SOCK" > ~/.ssh_auth

function settitle() {
  SESH=`echo $TMUX | cperl 'm/.*\/(.*?)\,/ && print $1;'`
  PS1="$SESH"'\[\e[1;32m\]\u\[\e[m\]@\[\e[36m\]\h\[\e[m\] \w\[\e[34m\] $\[\e[m\] ';
  echo -ne "\e]0;$1\a";
  echo -ne "\033]0;${1}\007";
}


